// <auto-generated />
using System;
using Equus.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Equus.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Equus.App.Dominio.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Historia_ClinicaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Historia_ClinicaId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("Animales");
                });

            modelBuilder.Entity("Equus.App.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoAnimo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVisita")
                        .HasColumnType("datetime2");

                    b.Property<float>("FrecuenciaCardiaca")
                        .HasColumnType("real");

                    b.Property<float>("FrecuenciaRespiratoria")
                        .HasColumnType("real");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Recomendacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeterinarioDesignadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeterinarioDesignadoId");

                    b.ToTable("HistoriasClinicas");
                });

            modelBuilder.Entity("Equus.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("Equus.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("Equus.App.Dominio.Persona");

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.HasIndex("AnimalId");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("Equus.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("Equus.App.Dominio.Persona");

                    b.Property<string>("TarjetaProfesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("Equus.App.Dominio.Animal", b =>
                {
                    b.HasOne("Equus.App.Dominio.HistoriaClinica", "Historia_Clinica")
                        .WithMany()
                        .HasForeignKey("Historia_ClinicaId");

                    b.HasOne("Equus.App.Dominio.Veterinario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("VeterinarioId");

                    b.Navigation("Historia_Clinica");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Equus.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasOne("Equus.App.Dominio.Veterinario", "VeterinarioDesignado")
                        .WithMany()
                        .HasForeignKey("VeterinarioDesignadoId");

                    b.Navigation("VeterinarioDesignado");
                });

            modelBuilder.Entity("Equus.App.Dominio.Propietario", b =>
                {
                    b.HasOne("Equus.App.Dominio.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId");

                    b.Navigation("Animal");
                });
#pragma warning restore 612, 618
        }
    }
}
